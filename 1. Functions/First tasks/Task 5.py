# Дана дробь 𝑚, n и m - натуральные числа. 
# Напишите 2 функции, которые сокращают эту дробь, то есть находят числа p и q такие, что (n/m = p/q), и дробь (p/q) — несократимая:
# • аргументами функции являются числа n, m, функция возвращает кортеж (p, q);
# • аргументом функции является список [n, m], функция не возвращает значения, а изменяет этот список на [p, q].
# Для поиска НОД воспользуйтесь функцией из предыдущего задания.

from GCD import gcd_calc

def tuple_func(n, m, gcd):
    p = n / gcd
    q = m / gcd
    return((p, q))

def list_func(nm_gcd):
    global list
    p = nm_gcd[0] / nm_gcd[2]
    q = nm_gcd[1] / nm_gcd[2]
    list = [p, q]

n = 14
m = 2322
gcd = gcd_calc(n, m)

tuple = tuple_func(*(n, m, gcd))
list = [n, m, gcd]
list_func(list)

print("Результат сокращения через первую функцию: ", n, "/", m, " -> ", int(tuple[0]), "/", int(tuple[1]))
print("Результат сокращения через вторую функцию: ", n, "/", m, " -> ", int(list[0]), "/", int(list[1]))